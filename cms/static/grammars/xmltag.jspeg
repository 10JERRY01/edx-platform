start
  = XMLRootElement

XMLComment
  = '<!--' chars:(!'-->' .)+ '-->'
  {
    return '<!--' + chars.map(function(element) { return element[1]; }).join("") + '-->'
  }

XMLAttribute
  = attr:AlphanumericalText s1:OptionalSpaces '=' s2:OptionalSpaces value:DoubleQuotedString
  {
  	return attr + '=' + "\"" value.replace("\"", "\\"") + "\""
  }

XMLTagOpen
  = '<' OptionalSpaces name:AlphanumericalText OptionalSpaces attrs:(XMLAttribute / ' ')*  OptionalSpaces '>'
  {
    tag = '<' + name;
    if (attrs.length)
      tag += ' ' + attrs.join("");
    tag += '>';
    return tag;
  }

XMLTagClose
  = '<' OptionalSpaces '/' OptionalSpaces name:AlphanumericalText OptionalSpaces '>'
  {
  	return '</' + name + '>'
  }

XMLTagEmpty
  = '<' OptionalSpaces name:AlphanumericalText OptionalSpaces attrs:(XMLAttribute / ' ')*  OptionalSpaces '/>'
  {
    tag = '<' + name;
    if (attrs.length)
      tag += ' ' + attrs.join("");
    tag += '/>';
    return tag;
  }

XMLElement
  = chars:((!'>' !'<' .)+)
  	{
      return chars.map(function(element) { return element[2]; }).join("");
    }
  / XMLRootElement

XMLRootElement
  = XMLTagEmpty
  / open:XMLTagOpen children:(XMLElement+) close:XMLTagClose 
    {
      return open + children.join("") + close;
    }
  / XMLTagOpen XMLTagClose
    {
      return open + close;
    }
  / XMLComment


OptionalSpaces
  = ' '*

DoubleQuotedString
  = "\"\"" { return ""; }
  / "\"" str:(!UnescapedQuote .)* last:UnescapedQuote {
    return str.map(function(element) { return element[1]; }).join("") + last;
  }

UnescapedQuote
  = last:[^\\] "\"" {return last;}

